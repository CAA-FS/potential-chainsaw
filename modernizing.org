#+TITLE:  Ensuring Center For Army Analysis Compliance With Federal Source Code Policy
#+AUTHOR: Tom Spoon and Rick Hanson III
#+DATE: 17 Aug 2016
#+VERSION: 1.2
#+STARTUP: showall
#+LANGUAGE: en
#+OPTIONS: ':t toc:nil
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [letterpaper,10pt,oneside,onecolumn,draft]
#+LATEX_HEADER: \usepackage{enumitem}
#+LATEX_HEADER: \setlist[itemize,1]{leftmargin=*}
#+LATEX_HEADER: \setlist[itemize,2,3]{leftmargin=*,topsep=0mm}
#+LATEX_HEADER: \textwidth=6.5truein
#+LATEX_HEADER: \oddsidemargin=0.0truein
#+LATEX_HEADER: \evensidemargin=0.0truein
#+LATEX_HEADER: \topmargin=-0.6truein
#+LATEX_HEADER: \textheight=9truein
#+LATEX_HEADER: \hyphenation{MAR-A-THON}

* Aligning the Center For Army Analysis Policy Towards Open Source Software and Releasability With Modern Federal Source Code Policy
Like many government agencies, the Center for Army Analysis (CAA) is both a consumer and producer of software.
From decades-old legacy models and simulations that support Army and Department of Defense Analysis, to simple
utilities, scripts, and tools that enable rapid research, analysis, and improved productivity, the federal 
employees at CAA have created a bevy of source code.  CAA's default position regarding sharing these creative works,
particularly the realm of modeling and simulation source, is one of closed-source and isolation.  Objections to releasing
source code range from security and classification risks, to loss of a competitive analytic edge, to lacking indemnity from
potential consumers of CAA software, to the simple absence of a mandate to share.  These concerns are more or less codified in 
the prevailing Army Modeling and Simulation Office (AMSO) releasibility policy in AR 5-11 (2014), which fundamentally 
leaves the decision to share source code to CAA.  Until recently, CAA's default position has been supported by 
legacy policy that delegates to the preference of CAA leadership rather than mandating sharing and openness. 

Unfortunately CAA's position, and the policy in AR 5-11, is not compliant with Federal Source Code Policy as directed by 
Executive Order and subsequent Office of Management and Budget (OMB) policy.  Initiated by President Obama, and continued 
by President Trump, the default position of the federal government towards source code is openness.  
This position emerged in 2013 under Executive Order No. 13642, "Making Open and Machine Readable the New Default
 for Government Information" (EO13642). Via EO13642, the Obama administration mandated sharing 
government data - including source code - between federal agencies, and embraced open-sourcing federal software to spur 
cost-reduction, reduce redundancy, and place tax-payer funded works in the public domain.

EO13642 authorized and directed the OMB to define and implement the federal policy to execute the order, which 
OMB detailed under the Digital Government Initiative (a.k.a. "The People's Code") in August of 2016.  The ultimate 
result emerged in OMB M-16-21, "Federal Source Code Policy Memorandum," when the detailed Federal Source Code Policy 
(FSCP) became the governing policy for all federal agencies.  Since the policy's inception, marked by the 2016 rollout of 
the central coordinating repository of government code https://code.gov, CAA has not been compliant with the 
mandates of the FSCP and the federal government's modernized policy on sharing and open source software.  

* Paradigm Shift in Software Development: Embracing Open Source 
DOD has been an early-adopter and general proponent of the utility of Open Source Software.
The DOD Chief Information Officer (DOD-CIO/G6) paved the way for broad adoption and use of superior 
Open Source tools on DOD networks with its 2009 policy, "DOD-CIO/G6 Clarification Guidance Regarding 
Open Source Software (OSS)".  In conjunction with the memorandum, DOD/CIO-G6 provided an official
website addressing the benefits, risks, legalities, and practical questions surrounding the use of
Open Source Software on DOD networks (http://dodcio.defense.gov/Open-Source-Software-FAQ/).

In many ways, the policy and the website were merely addressing the reality of prevelant usage
of Open Source Software throughout DOD.  Case in point, CAA initiated and maintains exceptions to 
Army Policy for internal networks specifically to leverage the superior capability of both closed 
and Open Source Software that may not have a Certificate of Networthiness, or otherwise be "approved" 
software.  Even legacy CAA models and simulations rely heavily on Open Source Software for 
development, scripting, and processing (both pre and post).

Still, the DOD/CIO-G6 policy focuses on access and use of Open Source Software, rather than
the sharing existing federal source code or releasing source code into the public domain.
Notably, the Army CIO/G6 has no additional policy addressing either the use or release of 
open source software.  Until the emergence of the Federal Source Code Policy, DOD agencies
had the ability to use Open Source Software for mission execution, without the mandate to
share or otherwise release source code.
  
* Benefits of Open Source and Sharing
Open Source Software fundamentally rests on the idea that the open sharing of information 
yields numerous second and third order benefits.  In the case of software, making the 
source code available promotes 
- Open Source as Means of Publication
  - Particularly in the case of reproducible research, releasing the source code is a 
    modern pre-requisite to validate any scientific or academic observations.  
  - Similarly, making even amateur or experimental source code available serves as an 
    entry point for establishing communication with other interested parties that 
    may form a community.
- Collaboration
  - Freedom of information fosters communication, allowing interested parties to collaborate 
    across various domains
    - including research, development, issue tracking, patching source code, and more.
- Reuse
  - The "community" can freely build upon and extend existing works, ideally bypassing 
    the need to constantly reinvent the wheel or duplicate effort.
  - Much like academia and industry, reuseable source code allows the state of the art 
    to advance more rapidly.

According to DOD  (DOD/CIO-G6 Clarifying Guidance on Open Source Sofware, p. 4-5),

1) The continuous and broad peer-review enabled by publicly available source code supports 
   software reliability and security efforts through the identification and elimination of 
   defects that might otherwise go unrecognized by a more limited core development team. 
2) The unrestricted ability to modify software source code enables the 
   Department to respond more rapidly to changing situations, missions, 
   and future threats.  
3) Reliance on a particular software developer or vendor due to proprietary 
   restrictions may be reduced by the use of OSS, which can be operated and 
   maintained by multiple vendors, thus reducing barriers to entry and exit. 
4) Open source licenses do not restrict who can use the software or the fields 
   of endeavor in which the software can be used.  Therefore, OSS provides a net-centric 
   licensing model that enables rapid provisioning of both known and unanticipated users. 
5) Since OSS typically does not have a per-seat licensing cost, it can provide 
   a cost advantage in situations where many copies of the software may be required, and 
   can mitigate risk of cost growth due to licensing in situations where the total number of 
   users may not be known in advance. 
6) By sharing the responsibility for maintenance of OSS with other users, 
   the Department can benefit by reducing the total cost of ownership for software, 
   particularly compared with software for which the Department has sole responsibility for 
   maintenance (e.g., GOTS). 
7) OSS is particularly suitable for rapid prototyping and experimentation, 
   where the ability to “test drive” the software with minimal costs and administrative 
   delays can be important. 

Open Source Software has had such undeniable success that even historically closed-source,
proprietary companies like Microsoft have been making significant investments in opening their 
infrastructure and significantly contributing to the Open Source community, including helping 
historical "threats" like the Linux operating system.

* OMB M-16-21, "Federal Source Code Policy Memorandum" 
As a consequence of EO 13642, the OMB established Federal Source Code Poilicy via memorandum 
M-16-21.  The Federal Source Code Policy prescribes mandatory requirements for federal agency 
practices for sharing source code, open sourcing software, and participating in the open source 
software community.

** Major provisions of the FSCP include:
*** Government-wide Source Code Sharing
  At a minimum, government agenciees are mandated to make source code available to the federal government 
  for interagency reuse.

*** Open Source Software Pilot Program
  - Government agencies (including DOD) are automatically part of a 3-year open source pilot program.
    During the pilot program, policy mandates that 20% of newly created custom software is to be open source.
    This applies to software created by government employees, and software created in execution of a 
    government contract.

  - Open sourcing software is highly encouraged, and even temporarily mandated for a portion of 
    our new custom software projects for the duration of the "pilot program."  Open source 
    software is intended to be broadly accesible, and developed with "open" practices, disseminated 
    on - possibly 3rd party - platforms with established open source communities.

*** code.gov
  Per the policy, agencies will coordinate and publicize their software with the OMB-managed 
  website https://code.gov .  This website serves as an accessible repository of all known 
  government source code, to facilitate discovery and ease reuse.
  
** Participation in the Open Source Community (Excerpt from FSCP)
When agencies release custom-developed source code as OSS to the public, they should develop and release 
the code in a manner that 
  (1) fosters communities around shared challenges, 
  (2) improves the ability of the OSS community to provide feedback on, and make contributions to, the source code, and 
  (3) encourages Federal employees and contractors to contribute back to the broader OSS community by making
      contributions to existing OSS projects.

In furtherance of this strategy, agencies should comply with the following principles:
- Leverage Existing Communities: 
    - Whenever possible, teams releasing custom-developed code to the public as OSS should appropriately engage and
      coordinate with existing communities relevant to the project. Government agencies should only develop their own  
      communities when existing communities do not satisfy their needs.
- Engage in Open Development: 
  - Software that is custom-developed for or by agencies should, to the extent possible and appropriate, be developed using
    open development practices. These practices provide an environment in which OSS can flourish and be repurposed. This principle,
    as well as the one below for releasing source code, include distributing a minimum viable product as OSS; engaging the public 
    before official release;30 and drawing upon the public’s knowledge to make improvements to the project.
- Adopt a Regular Release Schedule: 
  - In instances where software cannot be developed using open development practices, but is otherwise appropriate for 
    release to the public, agencies should establish an incremental release schedule to make the source code and associated 
    documentation available for public use.
- Engage with the Community: 
  - Similar to the requirement in the Administration’s Open Data Policy, agencies should create a process to engage in two-way 
    communication with users and contributors to solicit help in prioritizing the release of source code and feedback on the agencies’
    engagement with the community.
- Consider Code Contributions: 
  - One of the potential benefits of OSS lies within the communities that grow around OSS projects, whereby any party can contribute new code,
    modify existing code, or make other suggestions to improve the software throughout the software development lifecycle. 
    Communities help monitor changes to code, track potential errors and flaws in code, and other related activities. 
    These kinds of contributions should be anticipated and, where appropriate, considered for integration into
    custom-developed Government software or associated materials.
- Documentation: 
  - It is important to provide OSS users and contributors with adequate documentation of source code in an effort to
    facilitate use and adoption. Agencies must ensure that their repositories include enough information to allow reuse
    and participation by third parties. In participating in community-maintained repositories, agencies should follow community  
    documentation standards. 
  - At a minimum, OSS repositories maintained by agencies must include the following information:
     - Status of software (e.g., prototype, alpha, beta, release, etc.);
     - Intended purpose of software;
     - Expected engagement level (i.e., how frequently the community can expect agency activity);
     - License details; and
    - Any other relevant technical details on how to build, make, install, or use the software, including dependencies (if applicable).

- Exceptions
  - FSCP acknowledges exceptions to policy where legislation, or national security precludes 
    the release of source code.  If source code is either classified, or classified as National 
    Security System under 44 U.S. Code § 3542, the software is excepted.

** Management and Oversight
DOD (and Army) CIO(s) are required to coordinate with the OMB CIO to define and execute 
an implementation plan for the OMB guidance.  OMB provides quarterly processes that 
oversee the growth, maintenance, and overall progress of both the pilot program, and 
the Federal Source Code Policy compliance.

* AR 5-11 "Management of Army Modeling and Simulation, 30 May 2014"
AR 5-11 is problematic for a number of reasons. First, there is no mention (specifically 
nothing precluding) distribution of models and simulations as open source software.  Further, 
the distribution processes defined by the AR, specifically for interagency - even internal 
Army distribution - seems to directly contradict both the Executive Order, and the OMB 
implementation memorandum.  Further, none of the regulations referenced in AR 5-11 address
the possibility or even acknowledgement of open-source software, or the executive directives 
specified by the EO and the OMB memorandum. In general, AR 5-11 should be refreshed and/or 
rewritten to account for the FSCP, and to clean up antiquated terminology.

* Forcing Functions
There is, at a minimum, a federal mandate for sharing source code across the government, and 
a mandate to open-source 20% of our custom code during the course of the 3-year Open Source Pilot 
program. Under the Federal Source Code Policy, CAA must share our source in an open, unimpeded manner
with other government agencies so that there is government-wide reuse and cost saving.

Some agencies, such as NASA and the US Army Research Laboratories, are choosing to cut to the chase, 
and both open source and openly develop their code on Github. Github is the largest 3rd-party open source
community that offers source code hosting services, and meets every prescription of the FSCP guidance
for "Participation in the Open Source Community." Github repositories are then registered with 
https://code.gov to satisfy the discoverability and coordination requirements in the FSCP.

* Toward Open Sourcing MARATHON 4
MARATHON 4 is written in an Open Source Language (Clojure), managed with Open Source 
tools (git), and has emphasised unclassified development from inception.  MARATHON 4 
is intentionally written and maintained in such a way as to facilitate sharing and 
discovery, particularly to enable flexible development among remote work locations 
and to enable sharing of code for research purposes, peer-review, external verification,
and publication in professional forums like MORS, WinterSim, and INFORMS.  
MARATHON 4 is, for all intents and purposes, open-source ready and entirely compliant 
with the practices established by the FSCP.  Consequently, MARATHON 4 is an obvious 
Open Source candidate, preferably hosted on Github.

** Practical Benefits of Open Source Via Gitub
- Flexible Team-based Collaboration 
  - Developers can work remotely, from home, the office, at odd hours, etc.
    Using git, we have a rich collaborative platform for managing the source code, enabling
    concurrent, asynchronous development that maximizes development team productivity without
    sacrificing version control.  This complements existing technology like DCS
    (Defense Collaboration Services), allowing teams to communicate in real-time to resolve
    issues, learn about the software architecture, and even modify the source code.  

- Empirical Evidence at CAA
  - CAA has repeatedly maintained a developer shortfall; MARATHON 4 is a shining example of the 
    scarcity of developer talent.  The sole developer (Mr. Spoon) was allowed to continue working 
    remotely because of his decision to maintain MARATHON 4 development in an unclassified format, 
    thus enabling exactly the kind of remote/telework opportunity mentioned above.  
    CAA has been able to avert the loss of critical infrastructure development precisely due to 
    the flexibility enabled by distributed version control, unclassified development, and openness. 

  - With the addition of new team members, leveraging github as a synchronization point has already
    been incredibly useful for distance-based training, collaboration, source code revision, and
    real-time pair-programming.

- Industry Standard Version Control via Github.
  - Github provides a seamlessly integrated suite of tools that enhance the git DVCS 
    developer experience with 
    - source code repository hosting 
    - web-based interface for examining source code history, diffs, branches, etc.
    - web-based issue tracking, team communication, and other collaboration features.

** Compliance with Federal Source Code Policy
- At a minimum, MARATHON 4 must be shared with other federal agencies.
- Hosting as an open source project, hosted on Github, satisfies the existing 
  Federal Source Code Policy, in addition to the spirit of the executive order.
- MARATHON 4 could be used to fulfill the 20% mandate for open-sourcing custom 
  software during the current Pilot Program period.

* Possible Objections and Risks 
- "Army Policy Prevents Us From Doing So" 
  - The AMSO guidance in AR 5-11 contradicts (or in the best case, ignores/doesn't account for) 
    Federal Source Code Policy.  The apparent reflexive response to "not share" with federal 
    agencies, and  international partners, is contrary to both the spirit and the policy 
    codified by EO13642 and OMB M-16-21.

- "We should protect Army / CAA interests by not sharing source code."
  - The numerous benefits delineated by the DOD/CIO-G6, as well as decades of 
    empirical confirmation that "sharing is beneficial" from the software 
    industry and academia support an alternate prospect: CAA would be 
    protecting CAA / Army interests by taking advantage of the massive 
    benefits of open source, and by compliying with policy set forth by the 
    President of the United States.
 
- "We should run the model, they don't need the source. They can ask us for the analysis."
  - This service-minded aspect of Army M&S is detailed in AR 5-11, and is the predominant 
    "business model" that CAA, and indeed many analytic agencies, have followed.  
    Sharing code does not equate to sharing expertise.  Indeed, the dominant open 
    source software business model is to provide support and service in exchange 
    for remuneration.  Many clients or sponsors simply lack the developer talent 
    or inclination to modify the source code, and will still be interested in the 
    services provided.  The legacy service-based model can - and will - survive, 
    with the added benefit of collaboration and possible community engagement. 

- "We'd expose ourselves to security vulnerability."
  - MARATHON 4 is merely an instantation of AR 525-29, a publicly available document 
    detailing Army Force Generation.  Started as a purely unclassified development 
    effort, MARATHON 4 maintains that the source code for the simulation - including 
    comments, notional test data, and related documentation - neither requires nor 
    includes classified information.  Rather, the data upon which MARATHON 4 is applied, 
    and the resulting analysis, executed on a secure network, will be classified.  
    Nor is MARATHON 4 a "National Security System" as defined by 44 U.S. Code § 3542.
  
  - The security benefits of sharing and open sourcing are well-known, even 
    within DOD and the Army.  
    Per the (DOD-CIO/G6 OSS FAQ, "Q: Doesn't hiding source code automatically make
    software more secure?"):
     - "Even when the original source is necessary for in-depth analysis, making source
       code available to the public significantly aids defenders and not just attackers. 
       Continuous and broad peer-review, enabled by publicly available source code, 
       improves software reliability and security through the identification and 
       elimination of defects that might otherwise go unrecognized by the core development
       team."
     - "Conversely, where source code is hidden from the public, attackers can attack the 
       software anyway as described above.  In addition, an attacker can often acquire the
       original source code from suppliers anyway (either because the supplier voluntarily
       provides it, or via attacks against the supplier); in such cases, if only the 
       attacker has the source code, the attacker ends up with another advantage." 
     - "Hiding source code does inhibit the ability of third parties to respond to 
       vulnerabilities (because changing software is more difficult without the 
       source code), but this is obviously not a security advantage. 
       In general, “Security by Obscurity” is widely denigrated."

  - The Office of the Secretary of Defense piloted a succesful program to harden
    Pentagon defeneses by engaging the broader community of security experts 
    (Hack the Pentagon Results):
    - "Hack the Pentagon" was a recent US Digital Service initiative, where
      DOD software systems and services at the Pentagon were promoted on a "bug bounty" 
      system that allowed 3rd party security experts to test the system.
    - "...allowed more than 1,400 registered hackers to test the defenses of select 
      open source DoD websites such as Defense.gov. 
      Hackers who identified security gaps that qualified as valid vulnerabilities were
      then rewarded with a corresponding bounty price."
    - "...138 unique and previously undisclosed vulnerabilities were identified by security 
       researchers and remediated in near real-time by the Defense Media Activity."  

- "We have no obligation to release if no-one asks."
  - Federal Source Code policy mandates that our non-exempt software, like MARATHON 4, is - at 
    a minimum - advertised via https://code.gov and accessible to other federal agencies for reuse.
    Additionally, we are required to open-source  20% of our software during the current pilot 
    program period.

  - Additionally, Federal Source Code Policy mandates that 20% of created or acquired custom 
    software must be released as open source during the current pilot program, which lasts 
    until 2019.

- "Contractors will just repackage it and sell it back to us." 
  - If a contractor  uses the source code it to make something even marginally better, 
    then under the EO and OMB guidance we (the federal government) actually should get their
    modifications back in full. Other agencies devoting resources to improve MARATHON 4,
    with CAA controlling the integration and  merging of improvements, serves to extend the 
    range of support for MARATHON 4 development, further helping the chronic developer capability
    gap at CAA.

* Desired End State
Ideally, CAA will join the ranks of other Federal agencies and embrace the general modernization
of government technology, specifically the realization of the benefits of open source software 
development and sharing source code. The tendency to reflexively lock down source code without 
assessing the benefits - let alone the current mandate - to share our knowledge across the 
government and the public domain, serves to ensure isolated, resource-constrained development
devoid of the known value of external collaboration.  In pursuance of modernizing the Army 
technology space, and in accordance with Federal Source Code Policy, CAA and AMSO should 
lead this effort from the front.

In an ideal world, the benefits of sharing source code, allowing for interop with other agencies 
(even individuals like college students, researchers, or industry professionals) can pay dividends
in improving the source, aiding in verification, and generally building a community of interest. 

Access to the source code does not imply knowledge in how to build, execute, modify, or extend the 
model.  Nor does access predicate an innate desire to do so.  The established model-as-service 
approach still works under the open source paradigm.

CAA should choose to lead from the front on the issue of open sourcing, taking advantage of the 
open source paradigm under the auspices of the governing Federal Source Code Policy.  MARATHON 4 
can directly benefit from open development and hosting on Github.  

* Recommendations
1) CAA Should Comply With Federal Source Code Policy
   - CAA should provision the sharing of source code with federal agencies, and 
     advertise repositories on code.gov and / or code.mil as appropriate.
   - CAA should comply with the provisions of the pilot program from M-16-21, that 
     20% of newly-created (or acquired) custom software must be released as open source.
2) AR 5-11 "Management of Army Modeling and Simulation, 30 May 2014" Should be Made Consistent With Federal Source Code Policy
   - AR 5-11 does not account for the paradigm shift toward open source software development, and
     currently countermands the governing orders regarding Federal Source Code Policy.
3) MARATHON 4 should be hosted on github to enable collaborative team development
   - CAA should actively leverage modern technology (github and DCS) to address 
     the long-standing MARATHON developer capability gap.
   - Until CAA refines its position on compliance with the Federal Source Code Policy, 
     MARATHON should be maintained as a private repository on github to enable 
     rapid development and verification in the near-term.
     - Private Github repositories are available, but require additional 
       $25/month funding to support 5 developers for an organization. 
     - Should CAA decide to openly develop MARATHON, github hosting is 
       free for public repositories.
4) CAA should follow the exampe set by US Army Research Laboratories, and 
   release MARATHON 4 into the open as public domain software.
  - The U.S. Government has no copyright or intellectual property claim to MARATHON 4 or 
    any taxpayer-funded creative work.
  - MARATHON does not meet the exceptions provided by the Federal Source Code Policy, 
    namely the legal, classification, or "National Security System" exceptions.
  - Open development can only serve to strengthen the quality of MARATHON 4 via 
    easing collaboration and community engagement, while fulfilling the 
    Federal Source Code Policy mandate for the Open Source Software Pilot Program.
    
* References	

#+LATEX: \begin{footnotesize}

- Code.gov: https://code.gov

- Code.mil: https://code.mil

  - This is run by Defense Digital Service of the US Digital Service.

  - Defense Digital Service: https://www.dds.mil

  - US Digital Service: https://www.usds.gov

- AR 5-11 (Management of Army Modeling and Simulation, 30 May 2014)	

  http://www.apd.army.mil/epubs/DR_pubs/DR_a/pdf/web/r5_11.pdf	

- AR 25-1 (Army Information Technology, 25 June 2013)	

  http://www.apd.army.mil/epubs/DR_pubs/DR_a/pdf/web/r25_1.pdf	

- DOD-CIO/G6 (Clarification Guidance Regarding Open Source Software (OSS), 16 October 2009)	

  http://dodcio.defense.gov/Portals/0/Documents/FOSS/2009OSS.pdf	

- DOD-CIO/G6 (Open Source Software FAQ)	

  http://dodcio.defense.gov/Open-Source-Software-FAQ/	

- Federal Source Code Policy Memorandum	

  https://obamawhitehouse.archives.gov/sites/default/files/omb/memoranda/2016/m_16_21.pdf

  https://sourcecode.cio.gov

  https://sourcecode.cio.gov/Exceptions

- Executive Order 13642, May 9, 2013	
  "Making Open and Machine Readable the New Default for Government Information"	

  https://www.gpo.gov/fdsys/pkg/DCPD-201300318/pdf/DCPD-201300318.pdf

  #+LATEX: \iffalse
  https://obamawhitehouse.archives.gov/the-press-office/2013/05/09/executive-order-making-open-and-machine-readable-new-default-government-
  #+LATEX: \fi

  - Initial guidance for the Federal Source Code Policy

- Obama's Digital Government Initiative

  https://obamawhitehouse.archives.gov/sites/default/files/omb/egov/digital-government/digital-government.html

  https://obamawhitehouse.archives.gov/blog/2016/08/08/peoples-code

- Definition of "national security system" from "44 U.S. Code § 3542 - Definitions"

  https://www.law.cornell.edu/uscode/text/44/3542

  - This term shows up in Federal Source Code Policy Memorandum (esp. in section "Exceptions")

- Hack the Pentagon Results, "DOD Announces Hack the Pentagon Follow-up Initiative"
  https://www.defense.gov/News/Article/Article/981160/dod-announces-hack-the-pentagon-follow-up-initiative

#+LATEX: \end{footnotesize}
